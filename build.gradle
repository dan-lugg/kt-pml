plugins {
    id "com.github.ben-manes.versions" apply false
    id "io.spring.dependency-management" apply false
    id "org.jetbrains.kotlin.jvm" apply false
    id "org.jetbrains.kotlin.plugin.allopen" apply false
    id "org.jetbrains.kotlin.plugin.jpa" apply false
    id "org.jetbrains.kotlin.plugin.noarg" apply false
    id "org.jetbrains.kotlin.plugin.spring" apply false
}

apply from: "${rootProject.projectDir}/versions.gradle"

allprojects {
    group "com.luggsoft.pml"
    version "${System.getenv("RELEASE_VERSION")}"
}

subprojects {
    apply plugin: "com.github.ben-manes.versions"
    apply plugin: "idea"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "java"
    apply plugin: "maven-publish"
    apply plugin: "org.jetbrains.kotlin.jvm"
    apply plugin: "org.jetbrains.kotlin.plugin.allopen"
    apply plugin: "org.jetbrains.kotlin.plugin.jpa"
    apply plugin: "org.jetbrains.kotlin.plugin.noarg"
    apply plugin: "org.jetbrains.kotlin.plugin.spring"

    sourceSets {
        example {
            kotlin {
                // compileClasspath += main.output
                // runtimeClasspath += main.output
            }
        }
    }

    configurations {
        exampleCompile.extendsFrom testCompile
        exampleRuntime.extendsFrom testRuntime
    }

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2"
        }
        maven {
            url "https://repo.spring.io/milestone"
        }
        githubRepositories.each { githubRepository ->
            maven {
                url = uri(githubRepository)
                credentials {
                    username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
                    password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
                }
            }
        }
    }


    dependencyManagement {
        dependencies {
            libraries.each { library -> dependency library }
        }
    }

    dependencies {
        implementation(
                sourceSets.example.output,
                "ch.qos.logback:logback-classic",
                "com.fasterxml.jackson.core:jackson-annotations",
                "com.fasterxml.jackson.core:jackson-core",
                "com.fasterxml.jackson.dataformat:jackson-dataformat-cbor",
                "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml",
                "com.fasterxml.jackson.datatype:jackson-datatype-jsr310",
                "com.fasterxml.jackson.module:jackson-module-kotlin",
                "org.jetbrains.kotlin:kotlin-stdlib-jdk8",
                "org.reflections:reflections",
        )

        testImplementation(
                "org.junit.jupiter:junit-jupiter",
        )
    }

    test {
        useJUnitPlatform()
    }

    kotlin {
        jvmToolchain(16)
    }

    publishing {
        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/dan-lugg/luggsoft-pml")
                credentials {
                    username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
                    password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
                }
            }
        }

        publications {
            gpr(MavenPublication) {
                from(components.java)
            }
        }
    }
}
